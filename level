import pygame as pg
from tiles import Tile
from settings import tile_size,sc_wid
from player import Player

class Level:
    def __init__(self,level_data,surface):
        self.display_surf = surface
        #self.level_data = level_data
        self.setup_level(level_data)
        self.world_shift =-1
    def setup_level(self,layout):
        self.tiles = pg.sprite.Group()
        self.player =pg.sprite.GroupSingle()
        for row_index,row in enumerate(layout):
            for col_index,cell in enumerate(row):
                x = col_index * tile_size
                y = row_index * tile_size
                if cell == 'X':
                    tile = Tile((x,y),tile_size)
                    self.tiles.add(tile)
                if cell == 'P':
                    player_sprite = Player((x,y))
                    self.player.add(player_sprite)
    def scroll_x(self):
        player = self.player.sprite
        player_x = player.rect.centerx
        direction_x = player.direction.x

        if player_x < sc_wid /4 and direction_x < 0:
            self.world_shift = 8
            player.speed =0
        elif player_x > sc_wid -(sc_wid /4) and direction_x >0:
            self.world_shift = -8
            player.speed = 0
        else:
            self.world_shift =0
            player.speed = 8
            
    def horizontal_collision(self):
        player = self.player.sprite
        player.rect.x += player.direction.x * player.speed
        #_____[collision for left/right, place character on the surf
        for sprite in self.tiles.sprites():
            if sprite.rect.colliderect(player.rect):
                if player.direction.x < 0:
                    player.rect.left = sprite.rect.right
                elif player.direction.x > 0 :
                    player.rect.right = sprite.rect.left
    def vertical_collision(self):
        player = self.player.sprite
        player.apply_gravity()

        for sprite in self.tiles.sprites():
            if sprite.rect.colliderect(player.rect):
                if player.direction.y > 0:
                    player.rect.bottom = sprite.rect.top
                    player.direction.y =0
                    player.on_ground = True
                elif player.direction.y < 0 :
                    player.rect.top = sprite.rect.bottom
                    player.direction.y =0
                    player.on_ceiling = True
        if player.on_ground and player.direction.y <0 or player.direction.y >1:
            player.on_ground = False
        if player.on_ceiling and player.direction.y > 0:
            player.on_ceiling = False
            
    def run(self):
        #____[level tiles]________________
        self.tiles.update(self.world_shift)
        self.tiles.draw(self.display_surf)
        
        #_____[player]____________________
        
        self.player.update()
        self.player.draw(self.display_surf)
        self.scroll_x()
        self.horizontal_collision()
        self.vertical_collision()
